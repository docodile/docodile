name: Deploy GitHub Pages & Publish Docker Image

on:
  push:
    branches: ["main"]
    tags:
      - "v*" # Match version tags like v1.0.0

jobs:
  deploy-pages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Docodile
        run: make build
      - name: Run Docodile build
        run: ./src/build/docodile build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          external_repository: docodile/docodile.github.io
          publish_dir: ./site
          publish_branch: main

  publish-docker:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Extract tag name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/docodile:${{ steps.extract_tag.outputs.TAG }}

  package-and-release:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Extract tag name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      - name: Run make package
        run: make package
      - name: Find tarball
        id: find_tarball
        run: |
          TARBALL=$(find . -name '*.tar.gz' | head -n 1)
          echo "TARBALL=$TARBALL" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.extract_tag.outputs.TAG }}
          name: Release ${{ steps.extract_tag.outputs.TAG }}
          files: ${{ steps.find_tarball.outputs.TARBALL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
